<html>
<head>
	<title></title>
	<script type="text/javascript" src="js/jsondiffpatch.js"></script>
	<script type="text/javascript" src="js/sockjs-1.0.3.js"></script>
	<script type="text/javascript" src="js/jquery-1.11.3.js"></script>
	<script type="text/javascript" src="js/hash.js"></script>
	<script type="text/javascript" src="js/knockout-3.3.0.js"></script>
	<script type="text/javascript" src="js/knockout.mapping-2.4.1.js"></script>
	<script type="text/javascript" src="js/knockout.dataportal-0.0.1.js"></script>
	<script src="js/dataportal.js?url=http://localhost:9999/dataPortal"></script>
	<style>
		body {font-family: sans-serif; font-size: 62.5%;}
		.box {margin: 1rem 0;}
		.box label {font-weight: bold; display: inline-block; width: 6rem; text-align: right; padding-right: 0.5rem;}
		.all-chats {height: 20rem; background: #ccc; padding: 1rem 0; overflow-y: scroll }
		.chat-line {width: 30rem;}
	</style>
</head>
<body>

<div class="js-name box">
    <label>Your name</label><input data-bind="value: name" />
</div>

<div class="js-chats box all-chats" data-bind="foreach: chats">
    <div>
    	<label data-bind="text: name() + ' ' + time()"></label>
    	<span data-bind="text: text"></span>
    </div>
</div>

<div class="js-chat box">
    <div>
    	<label>Chat</label>
    	<input class="chat-line" data-bind="textInput: chat, event: {keypress: send}" />
    </div>
</div>

<script>
//	Name model
var NameViewModel = function() {
    this.name = ko.observable();
}, nameVM = new NameViewModel();
ko.applyBindings(nameVM, $(".js-name").get(0));


//	Chat channel model
var Chat = function(name, text, time) {
	var timeObj = new Date(time);
    this.name = ko.observable(name);
    this.text = ko.observable(text);
    this.time = ko.observable(timeObj.getHours() + ":" + timeObj.getMinutes());
}, ViewModel = function(chats) {
    this.chats = ko.observableArray([]);
    this.addChat = function(name, text, time) {
    	this.chats.push(new Chat(name, text, time));
    	setTimeout(function(){
    		$('.js-chats').scrollTop($('.js-chats')[0].scrollHeight);
    	}, 100);
    };
},vm = new ViewModel();
ko.applyPortalBindings("chatTopic", vm, $(".js-chats").get(0));


//	Chat text model
var ChatViewModel = function(chats) {
	var me = this;
    me.chat = ko.observable();
    this.send = function(d, e){
		if(e.keyCode === 13) {
        	vm.addChat(nameVM.name(), me.chat(), (new Date()).getTime());
	    	me.chat("");
	    }
	    return true;
    }
},chatVM = new ChatViewModel();
ko.applyBindings(chatVM, $(".js-chat").get(0));
</script>

</body>
</html>