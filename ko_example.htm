<html>
<head>
	<title></title>
	<script type="text/javascript" src="js/jsondiffpatch.js"></script>
	<script type="text/javascript" src="js/sockjs-1.0.3.js"></script>
	<script type="text/javascript" src="js/jquery-1.11.3.js"></script>
	<script type="text/javascript" src="js/hash.js"></script>
	<script type="text/javascript" src="js/knockout-3.3.0.js"></script>
	<script type="text/javascript" src="js/knockout.mapping-2.4.1.js"></script>
	<script type="text/javascript" src="js/knockout.dataportal-0.0.1.js"></script>
	<script src="js/dataportal.js?url=http://local.mac:9999/dataPortal"></script>
</head>
<body>

<ul data-bind="foreach: items">
    <li>
        <span data-bind="text: id"></span>
        <input data-bind="value: name" />
    </li>
</ul>

<script>

//	Knockout dataportal integration
ko.dataPortal = function(root, isInitiallyDirty) {
	var _initialized,
		_fromPatch = false,
    	mp = dataPortal(root, "objtopic", {
			onpatch: function(object, message){
				_fromPatch = true;
				var myObj = ko.toJS(object);
				jsondiffpatch.patch(myObj, message.diff);
				ko.mapping.fromJS(myObj, {}, root);
				_fromPatch = false;
			}
		});

   var result = ko.computed(function () {
		if (!_initialized || _fromPatch) {
			ko.toJS(root);
			_initialized = true;
			return false;
		}

		var pvalue = JSON.parse(ko.toJSON(root));
		delete pvalue["__ko_mapping__"];
		delete pvalue["__dataPortal"];

		mp.publish(pvalue);

		return true;
	});

	return result;
};

//	Passthough for making this a dataPortalised view model
ko.applyPortalBindings = function(vm){
	//	Setup data portal functionality
	vm.__dataPortal = new ko.dataPortal(vm);

	ko.applyBindings.apply(ko, arguments);
}

//	Always ignore the dataPortal and KO mapping
ko.mapping.defaultOptions().ignore = ["__dataPortal", "__ko_mapping__"];





//	--- start normal KO model ---

function Item(id, name) {
    this.id = ko.observable(id);
    this.name = ko.observable(name);
}

var ViewModel = function(items) {
    this.items = ko.observableArray([
        new Item(1, "one"),
        new Item(2, "two"),
        new Item(3, "three")
    ]);
},vm = new ViewModel();


//	Use our special KO portal binder
//	Alternatively you can use the normal binder, but add a final item in your model like so:
//	
//		this.__dataPortal = new ko.dataPortal(this);
//		
//	Note: it MUST be the last item for it to work.
//		
ko.applyPortalBindings(vm);

</script>



</body>
</html>